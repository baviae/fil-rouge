---
- name: Installation from repo Ubuntu
  apt:
    name:
      - python3-docker
      - maven
    state: present

- name: registre node
  ansible.builtin.shell:
    cmd: curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -

- name: Installation nodejs
  apt:
    name:
      - nodejs

- name: SDK python pour docker
  pip:
    name: docker

- name: git clone du projet
  become: no
  git:
    repo: https://github.com/baviae/fil-rouge.git
    dest: /home/{{ ansible_user }}/fil-rouge
    force: yes

- name: Get a list of all running containers
  docker_host_info:
    containers: True
  register: docker_info

- name: Arret des container
  docker_container:
    name: '{{ item.Names[0] | regex_replace("^/", "") }}'
    state: stopped
  loop: '{{ docker_info.containers }}'

- name: Suppression des container
  docker_container:
    name: '{{ item.Names[0] | regex_replace("^/", "") }}'
    state: absent
  loop: '{{ docker_info.containers }}'

- name: Remove image postgres
  docker_image:
    state: absent
    name: postgres

- name: Remove image app-front
  docker_image:
    state: absent
    name: app-front

- name: Remove image app-front-node
  docker_image:
    state: absent
    name: app-front-node

- name: Remove image app-front-nginx
  docker_image:
    state: absent
    name: app-front-nginx

- name: Remove image back
  docker_image:
    state: absent
    name: aeckelineravalomanda/baviae

- name: DOCKER - Pull image postgres
  docker_image:
    name: postgres
    source: pull
    state: present

- name: DOCKER - Lancement container postgres
  community.docker.docker_container:
    name: EcoCom-postgres_DB
    image: postgres
    network_mode: host
    env:
      POSTGRES_PASSWORD: !vault |
        $ANSIBLE_VAULT;1.1;AES256
        30636132353462366535303761353938376238343231613736386338623932646533333238623661
        6532303564336430306237626235313165336636333230380a393933656666386133353666656363
        35653538353834313638303766376666376330383961386635656235386433346336376663313835
        6164623731336361370a363338353931666633393730373737323035306566376138313464636138
        3264
      POSTGRES_USER: baviae
      POSTGRES_DB: ecocom
    ports:
      - "5432"
    volumes: 
      - "/var/log/postgres_ecocom:/var/log/postgresql"
      - "/var/lib/postgres_ecocom_db:/var/lib/postgresql/data"
    container_default_behavior: no_defaults
    state: started


- name: DOCKER - Build image app-front
  community.docker.docker_image:
    name: app-front
    build: 
      path: /home/{{ ansible_user }}/fil-rouge/eco-commerce-front/
    source: build

- name: DOCKER - Lancement container back-end
  community.docker.docker_container:
    name: EcoCom-Back
    image: aeckelineravalomanda/baviae
    network_mode: host
    volumes:
      - "/var/log/appli_ecocom:/app/log"
    state: started

- name: install angular app
  ansible.builtin.shell:
    cmd: npm install --prefix /home/{{ ansible_user }}/fil-rouge/eco-commerce-front/

- name: Build angular app
  ansible.builtin.shell:
    cmd: npm run build --prod --prefix /home/{{ ansible_user }}/fil-rouge/eco-commerce-front/

- name: Creation des cle et certification ssl pour nginx
  ansible.builtin.shell:
    cmd:  openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /home/{{ ansible_user }}/fil-rouge/nginx/nginx.key -out /home/{{ ansible_user }}/fil-rouge/nginx/nginx.crt -batch

- name: Build de l'application front
  community.docker.docker_image:
    name: app-front-node
    build:
      path: /home/{{ ansible_user }}/fil-rouge/eco-commerce-front/
    source: build


- name: Build nginx image
  community.docker.docker_image:
    name: app-front-nginx
    build:
      path: /home/{{ ansible_user }}/fil-rouge/nginx/
    source: build

- name: DOCKER - Lancement container front-end node
  community.docker.docker_container:
    name: app-front-node1
    image: app-front-node
    network_mode: host
    ports:
      - "4200"
    container_default_behavior: no_defaults
    state: started

- name: DOCKER - Lancement container front-end nginx
  community.docker.docker_container:
    name: app-front-nginx-1
    image: app-front-nginx
    network_mode: host
    ports:
      - "80"
    container_default_behavior: no_defaults
    state: started
